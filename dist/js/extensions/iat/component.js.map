{"version":3,"file":"component.js","sources":["data/properties.js","trial/input_decorator.js","trial/feedback_decorator.js","trial/default.js","stimuli/separator.js","stimuli/category.js","trial/layout.js","trial/simple_layout.js","trial/IATlayout.js","trial/instructions.js","trial/trials.js","stimuli/stimuli.js","data/sequence.js","component.js","jst/layout.jst!text"],"names":[],"mappings":"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","sourcesContent":["// The default properties for the IAT component\n// These are changed by any user defined properties!\ndefine('extensions/iat/data/properties',[],function(){\n\treturn {\n\t\t// activate skip block\n\t\tDEBUG: true,\n\n\t\t// Default stimulus properties\n\t\t// All optional\n\t\tfont: 'Arial',\n\t\tfontSize: '2em',\n\t\tfontColor: '#31b404',\n\t\tdefaultStimulus: {},\n\t\tinstructionsStimulus: {css:{'font-size':'1.3em',color:'black', lineHeight:1.2,'text-align':'left',margin:'25px'}},\n\n\t\t// optional of course, the same settings as the main API\n\t\tbackground : '#EEEEEE', // the default background (for both canvas background and the generic background)\n\t\tcanvas: {\n\t\t\tmaxWidth: 800,\n\t\t\tproportions : 0.8\n\t\t},\n\n\t\t// Interface.\n\t\tleft: 'e', // default: e\n\t\tright: 'i', // default: i\n\t\tleftTouch: undefined, // default: system\n\t\trightTouch: undefined, // default: system\n\t\tnotouch: true, // default: true\n\n\t\ttimeout: 0, // default: 0 - no timeout\n\n\t\t// behaviour\n\t\t// The duration after you removed the target stimulus but you still wait before moving to the next trial.\n\t\trandomize_order: true, // switch blocks 1/5 and 34/67\n\t\tIATversion: 'long', // Takes 'long'\\'short'. default: 'long'\n\n\t\tinter_trial_interval: 250,\n\t\tpost_instructions_interval: 500,\n\n\t\t// do we make the user correct errors? default: true\n\t\tcorrect_errors: true,\n\n\t\terror_feedback : {\n\t\t\tactive: true, // default: true\n\t\t\tmedia: 'X', // default: 'X'\n\t\t\tduration: 'static' // default 'static'\n\t\t},\n\n\t\tcorrect_feedback : {\n\t\t\tactive: false, // default: false\n\t\t\tmedia: 'OK', // default: 'OK'\n\t\t\tduration: 300 // default?\n\t\t},\n\n\t\ttimeout_feedback : {\n\t\t\tactive: true, // default: false\n\t\t\tmedia: 'X', // default: 'X'\n\t\t\tduration: 500 // default: 500\n\t\t},\n\n\t\t// pick the appropriate layout interface\n\t\tsimpleLayout: true,\n\n\t\tseparatorColor: 'black', // the separator color (for simple_layout)\n\t\tseparatorSize: '1em', // the separator size (for simple_layout)\n\n\t\t// category seperator (for the advanced layout)\n\t\tseparator: {\n\t\t\tmedia: 'or', // default: 'or'\n\t\t\theight: 5,\n\t\t\tcss : {fontSize:'1.2em'} // optional\n\t\t},\n\n\t\tendMedia: undefined, // if you want to replace the message at the end of the task, you can use this property... just set any media you like.\n\n\t\tpulse: 20,\n\n\t\timages_base_url: \"\",\n\t\ttemplates_base_url: \"extensions/iat/jst\"\n\n\t};\n});\n","define('extensions/iat/trial/input_decorator',['../data/properties'],function(properties){\n\n\tvar input_decorator = function input_decorator(trial){\n\t\tvar input = trial.input;\n\t\tvar interactions = trial.interactions;\n\n\t\t// skip trial input\n\t\t// ***********************************************************************************\n\t\tif (properties.DEBUG){\n\t\t\tinput.push({handle:'skip1',on:'keypressed', key:27});\n\t\t}\n\n\t\t// left input\n\t\t// ***********************************************************************************\n\t\tswitch (typeof properties.left) {\n\t\t\tcase 'undefined' :\n\t\t\t\tinput.push({handle:'left',on:'keypressed',key:'e'});\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\t/* falls through */\n\t\t\tcase 'number':\n\t\t\t\tinput.push({handle:'left',on:'keypressed',key:properties.left});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tproperties.left.handle = 'left'; // make sure handle for object is correct\n\t\t\t\tinput.push(properties.left);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// right input\n\t\t// ***********************************************************************************\n\t\tswitch (typeof properties.right) {\n\t\t\tcase 'undefined' :\n\t\t\t\tinput.push({handle:'right',on:'keypressed',key:'i'});\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\t/* falls through */\n\t\t\tcase 'number':\n\t\t\t\tinput.push({handle:'right',on:'keypressed',key:properties.right});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tproperties.right.handle = 'right'; // make sure handle for object is correct\n\t\t\t\tinput.push(properties.right);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if touch is active\n\t\t// ***********************************************************************************\n\t\tif (!properties.notouch){\n\t\t\t// leftTouch\n\t\t\tswitch (typeof properties.leftTouch) {\n\t\t\t\tcase 'undefined' :\n\t\t\t\t\tinput.push({handle:'left',on:'leftTouch',touch:true});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tinput.push({\n\t\t\t\t\t\thandle:'left',\n\t\t\t\t\t\ton:'click',\n\t\t\t\t\t\telement:properties.leftTouch,\n\t\t\t\t\t\ttouch:true\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// rightTouch\n\t\t\tswitch (typeof properties.rightTouch) {\n\t\t\t\tcase 'undefined' :\n\t\t\t\t\tinput.push({handle:'right',on:'rightTouch',touch:true});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tinput.push({\n\t\t\t\t\t\thandle:'right',\n\t\t\t\t\t\ton:'click',\n\t\t\t\t\t\telement:properties.rightTouch,\n\t\t\t\t\t\ttouch:true\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Timout\n\t\t// ***********************************************************************************\n\t\tif (properties.timeout){\n\n\t\t\tinput.push({\n\t\t\t\thandle:'timeout',\n\t\t\t\ton:'timeout',\n\t\t\t\tduration:properties.timeout\n\t\t\t});\n\n\t\t\tinteractions.push({\n\t\t\t\tconditions: [\n\t\t\t\t\t{type:'inputEquals',value:'timeout'}\n\t\t\t\t],\n\t\t\t\tactions:[\n\t\t\t\t\t{type:'removeInput',handle:['left','right']},\n\t\t\t\t\t{type:'setTrialAttr', setter:{score:9}},\n\t\t\t\t\t{type:'log'},\n\t\t\t\t\t{type:'trigger',handle:'timeout_feedback'}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\n\t\treturn trial;\n\t};\n\n\treturn input_decorator;\n});\n","/*\n * Returns a decorator for trial objects that adds feedback interactions and stimuli\n */\ndefine('extensions/iat/trial/feedback_decorator',['../data/properties'],function(properties){\n\tvar decorator = function(trial){\n\t\tvar feedback_types = ['correct', 'error', 'timeout'];\n\t\tvar interactions = trial.interactions;\n\n\t\tfor (var i=0; i < feedback_types.length; i++){\n\t\t\tvar FBtype = feedback_types[i] + '_feedback';\n\t\t\tvar propertiesObj = properties[FBtype] || {};\n\n\t\t\t// if we're not going to display any feedback, trigger the end action imidiately\n\t\t\tif (!propertiesObj.active) {\n\t\t\t\tinteractions.push({\n\t\t\t\t\tconditions: [{type:'inputEquals',value: FBtype}],\n\t\t\t\t\tactions: [{type:'trigger',handle : 'remove_' + FBtype}]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// show feedback\n\t\t\t\tinteractions.push({\n\t\t\t\t\tconditions: [{type:'inputEquals',value: FBtype}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'showStim',handle : FBtype},\n\t\t\t\t\t\t{type:'setInput',input:{handle:'remove_' + FBtype, on:'timeout', duration:propertiesObj.duration >= 0 ? propertiesObj.duration : 300}}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t} // end if FB is active\n\n\t\t\t// end trial if this isn't an error or if we don't need to correct errors\n\t\t\tif (FBtype !== 'error_feedback' || !properties.correct_errors) {\n\t\t\t\tinteractions.push({\n\t\t\t\t\tconditions: [{type:'inputEquals',value: 'remove_' + FBtype}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'trigger',handle: 'end'}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// if we need to correct errors\n\t\t\t\t// and the error feedback is temporary\n\t\t\t\tif (propertiesObj.duration !== 'static') {\n\t\t\t\t\tinteractions.push({\n\t\t\t\t\t\tconditions: [{type:'inputEquals',value: 'remove_' + FBtype}],\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{type:'hideStim',handle : FBtype}\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t} // end FBtype loop\n\n\t\treturn trial;\n\t};\n\n\treturn decorator;\n\n});\n","define('extensions/iat/trial/default',['../data/properties','./input_decorator','./feedback_decorator'],function(properties,input_decorator,feedback_decorator){\n\n\tfunction defaultTrial(){\n\t\tvar trial = {\n\t\t\t// by default each trial is correct, this is modified in case of an error\n\t\t\tdata: {score:0},\n\t\t\tinput: [],\n\t\t\tlayout: [\n\t\t\t\t{inherit:{type:'byData',set:'layout',data:'left'}},\n\t\t\t\t{inherit:{type:'byData',set:'layout',data:'right'}}\n\t\t\t],\n\t\t\tinteractions: [\n\t\t\t\t// begin trial : display stimulus imidiately\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'begin'}],\n\t\t\t\t\tactions: [{type:'showStim',handle:'target'}]\n\t\t\t\t},\n\n\t\t\t\t// correct\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEqualsStim',property:'side',handle:'target'}],\t\t\t\t// check if the input handle is equal to the \"side\" attribute of stimulus.data\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'removeInput',handle:['left','right','timeout']},\n\t\t\t\t\t\t{type:'hideStim',handle:'error_feedback'},\n\t\t\t\t\t\t{type:'log'},\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// log this trial\n\t\t\t\t\t\t{type:'trigger',handle:'correct_feedback'}\t\t\t\t\t\t\t\t\t// trigger the correct feedback (and maybe endtrial)\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t// end after ITI\n\t\t\t\t// the end action is called by actions added within the feedback module (even if feedback is not activated)\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'end'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'hideStim',handle:'All'},\n\t\t\t\t\t\t{type:'setInput',input:{handle:'endTrial', on:'timeout', duration:properties.inter_trial_interval || 0}}\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'endTrial'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'endTrial'}\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t// skip block\n\t\t\t\t// activate skipping:\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip1'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'setInput',input:{handle:'skip2',on:'enter'}}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t// skip:\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip2'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'goto', destination: 'nextWhere', properties: {blockStart:true}},\n\t\t\t\t\t\t{type:'endTrial'}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\tstimuli: []\n\t\t};\n\n\t\t// error interaction\n\t\tvar error = {\n\t\t\tconditions: [\n\t\t\t\t{type:'inputEqualsStim',property:'side',handle:'target',negate:true},\t\t\t\t// check if the input handle is unequal to the \"side\" attribute of stimulus.data\n\t\t\t\t{type:'inputEquals',value:['right','left']}\t\t\t\t\t\t\t\t\t// make sure this is a click interaction\n\t\t\t],\n\t\t\tactions: [\n\t\t\t\t{type:'trigger',handle:'error_feedback'},\t\t\t\t\t\t\t\t\t// trigger the error feedback (and maybe endtrial)\n\t\t\t\t{type:'setTrialAttr', setter:{score:1}}\t\t\t\t\t\t\t\t\t\t// set the score to 1\n\t\t\t]\n\t\t};\n\t\t// if we aren't correcting errors, lets remove all the interactions\n\t\tif (!properties.correct_errors){\n\t\t\terror.actions.unshift({type:'removeInput',handle:['left','right','timeout']});\n\t\t}\n\n\t\ttrial.interactions.push(error);\n\n\t\t// adds feedback specific interactions\n\t\tfeedback_decorator(trial);\n\n\t\t// adds input\n\t\tinput_decorator(trial);\n\n\t\treturn trial;\n\t}\n\n\treturn defaultTrial;\n});\n","define('extensions/iat/stimuli/separator',['../data/properties'], function(properties){\n\t// return new separator stimulus\n\treturn function Separator(side, marginTop){\n\t\tvar data = properties.separator\n\t\t\t, stimulus = {media : data.media, css: data.css || {color:'black'}}\n\t\t\t, margin = data.margin || 0;\n\n\t\tswitch (side) {\n\t\t\tcase 'left' :\n\t\t\t\tstimulus.location = {left: 2 + margin, top: marginTop};\n\t\t\t\tbreak;\n\t\t\tcase 'right' :\n\t\t\t\tstimulus.location = {right: 2 + margin, top: marginTop};\n\t\t\t\tbreak;\n\t\t\tcase 'center' :\n\t\t\t\tstimulus.location = {top: marginTop};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn stimulus;\n\t};\n\n});\n","define('extensions/iat/stimuli/category',['../data/categories'], function(categories){\n\n\treturn function Category(categoryName, side, marginTop){\n\t\tvar category = categories[categoryName]\n\t\t\t, margin = category.margin || 0;\n\t\tif (!category){\n\t\t\tthrow new Error(categoryName + ' is not a category name (or has not been loaded yet)');\n\t\t}\n\n\t\tvar media = category.title || category.name // the category media is preferably the title else the name.\n\t\t\t, stimulus = {media : media, css: category.titleCss || {fontSize:'1.3em', color:'black'}, height: category.height || 5};\n\n\t\tswitch (side) {\n\t\t\tcase 'left' :\n\t\t\t\tstimulus.location = {left: 2 + margin, top: marginTop};\n\t\t\t\tbreak;\n\t\t\tcase 'right' :\n\t\t\t\tstimulus.location = {right: 2 + margin, top: marginTop};\n\t\t\t\tbreak;\n\t\t\tcase 'center' :\n\t\t\t\tstimulus.location = {top: marginTop};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknow side in category');\n\t\t}\n\n\t\treturn stimulus;\n\t};\n\n});\n","define('extensions/iat/trial/layout',['underscore', '../data/properties','../stimuli/separator','../stimuli/category'],function(_, properties, Separator, Category){\n\n\t/*\n\t * Takes a map of the form {left: ['concept1'], right: ['concept2']}\n\t * Returns a layout array for a trial (with real stimuli, not inheritance)\n\t */\n\tvar layout = function layout(map){\n\t\tvar layoutArr = [];\n\n\t\t// for each side\n\t\t_.each(map, function(type,side){\n\t\t\tvar marginTop = 2; // this is the margin from the top\n\n\t\t\t_.each(type, function(category, index){\n\t\t\t\tvar separator, categoryStim;\n\n\t\t\t\t// if we need a separator push separator\n\t\t\t\tif (index > 0 && _.isObject(properties.separator)){\n\t\t\t\t\tseparator = new Separator(side,marginTop);\n\t\t\t\t\tlayoutArr.push(separator);\n\t\t\t\t\tmarginTop += properties.separator.height || 4;\n\t\t\t\t}\n\n\t\t\t\t// push category\n\t\t\t\tcategoryStim = new Category(category, side, marginTop);\n\t\t\t\tlayoutArr.push(categoryStim);\n\t\t\t\tmarginTop += categoryStim.height;\n\t\t\t});\n\n\t\t});\n\n\t\treturn layoutArr;\n\t};\n\n\treturn layout;\n\n});\n","define('extensions/iat/trial/simple_layout',['underscore', '../data/properties','../data/categories'],function(_, properties, categories){\n\n\t/*\n\t * Takes a map of the form {left: ['concept1'], right: ['concept2']}\n\t * Returns a layout array for a trial (with real stimuli, not inheritance)\n\t * This function realises the simpleLayout layout which essentialy uses a\n\t */\n\tvar simpleLayout = function layout(map){\n\t\tvar layoutArr = [];\n\n\t\t// for each side\n\t\t_.each(map, function(type,side){\n\t\t\tvar categoryStim = {media:{template:'layout.jst'}, data:{separatorColor:properties.separatorColor, separatorSize: properties.separatorSize}}\n\t\t\t\t, data = categoryStim.data;\n\n\t\t\tswitch (side){\n\t\t\t\tcase 'left' : categoryStim.location = {left: 2, top:2}; break;\n\t\t\t\tcase 'right' : categoryStim.location = {right: 2, top:2}; break;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknow side');\n\t\t\t}\n\n\t\t\t// for each category\n\t\t\t_.each(type, function(category){\n\t\t\t\t// there can be only one attribute/concept in each side, so we can drop the numbers...\n\t\t\t\tvar prefix = category.replace(/[0-9]/g, '');\n\t\t\t\tvar categoryObj = categories[category];\n\t\t\t\tvar name = _.isObject(categoryObj.title) ? categoryObj.title.word : categoryObj.title;\n\t\t\t\tif (!name){\n\t\t\t\t\tthrow new Error ('We are missing a title for ' + type + '. are you using an advanced media type by any chance?');\n\t\t\t\t}\n\t\t\t\tdata[prefix] = name;\n\t\t\t\tcategoryObj.titleColor && (data[prefix + 'Color'] = categoryObj.titleColor);\n\t\t\t\tcategoryObj.titleSize && (data[prefix + 'Size'] = categoryObj.titleSize);\n\t\t\t});\n\n\t\t\t// push category\n\t\t\tlayoutArr.push(categoryStim);\n\t\t});\n\n\t\treturn layoutArr;\n\t};\n\n\treturn simpleLayout;\n});\n","/*\n *\tReturns the layout array for the fitting block of the IAT\n *\tThis is the layout array that is used within the trials (with real stimuli, not inheritance)\n *\tThis function can return either the clasical layout theme or the the simpleLayout.\n */\ndefine('extensions/iat/trial/IATlayout',['../data/properties','./layout', './simple_layout'],function(properties, layout, simpleLayout){\n\n\tvar layoutArr = {\n\t\t1: {left:['concept1'],right:['concept2']},\n\t\t2: {left:['attribute1'],right:['attribute2']},\n\t\t3: {left:['attribute1','concept1'],right:['attribute2','concept2']},\n\t\t4: {left:['attribute1','concept1'],right:['attribute2','concept2']},\n\t\t5: {left:['concept2'],right:['concept1']},\n\t\t6: {left:['attribute1','concept2'],right:['attribute2','concept1']},\n\t\t7: {left:['attribute1','concept2'],right:['attribute2','concept1']}\n\t};\n\n\treturn function(block){\n\t\treturn properties.simpleLayout ? simpleLayout(layoutArr[block]) : layout(layoutArr[block]);\n\t};\n});\n","define('extensions/iat/trial/instructions',['underscore','../data/properties','../data/categories','./IATlayout'],function(_,properties,categories,layout){\n\t// the generic instruction trial\n\tfunction genericConstructor(){\n\t\tvar generic = {\n\t\t\tdata: {block:'generic'},\n\t\t\t// create user interface (just click to move on...)\n\t\t\tinput: [\n\t\t\t\t{handle:'space',on:'space'}\n\t\t\t],\n\n\t\t\tinteractions: [\n\t\t\t\t// display instructions\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'begin'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'showStim',handle:'All'}\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t// end after ITI\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'space'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'hideStim',handle:'All'},\n\t\t\t\t\t\t{type:'setInput',input:{handle:'endTrial', on:'timeout', duration: properties.post_instructions_interval || 0}}\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'endTrial'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'endTrial'}\n\t\t\t\t\t]\n\t\t\t\t},\n\n\t\t\t\t// skip block\n\t\t\t\t// activate skipping:\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip1'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'setInput',input:{handle:'skip2',on:'enter'}}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t// skip:\n\t\t\t\t{\n\t\t\t\t\tconditions: [{type:'inputEquals',value:'skip2'}],\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{type:'goto', destination: 'nextWhere', properties: {blockStart:true}},\n\t\t\t\t\t\t{type:'endTrial'}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tif (properties.DEBUG){\n\t\t\tgeneric.input.push({handle:'skip1',on:'keypressed', key: 27});\n\t\t}\n\n\t\t// if touch is active add the touch input\n\t\tif (!properties.notouch){\n\t\t\tgeneric.input.push({handle:'space',on:'bottomTouch',touch:true});\n\t\t}\n\n\t\treturn generic;\n\t}\n\n\n\n\tvar last =  {\n\t\tdata: {block:'last'},\n\t\t// create user interface (just click to move on...)\n\t\tinput: [\n\t\t\t{handle:'space',on:'space'}\n\t\t],\n\n\t\tinteractions: [\n\t\t\t// display instructions\n\t\t\t{\n\t\t\t\tconditions: [{type:'begin'}],\n\t\t\t\tactions: [\n\t\t\t\t\t{type:'showStim',handle:'All'}\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// end\n\t\t\t{\n\t\t\t\tconditions: [{type:'inputEquals',value:'space'}],\n\t\t\t\tactions: [{type:'endTrial'}]\n\t\t\t}\n\t\t],\n\t\tstimuli: []\n\t};\n\n\t// this array will hold any user defined settings\n\tvar settingsArr = [];\n\n\t// build insructions array\n\tfunction buildInstructions(){\n\n\t\tvar generic = genericConstructor()\n\t\t\t, instructionsArr = [generic]\n\t\t\t, trial\n\t\t\t, stimulus\n\t\t\t, settings\n\t\t\t// The layout should depend on part and not on block.\n\t\t\t, customize = function(){\n\t\t\t\tthis.layout = layout(this.data.part);\n\t\t\t};\n\n\n\t\tfor (var i = 1; i <= 7; i++){\n\t\t\tsettings = settingsArr[i] || {};\n\t\t\t// default trial\n\t\t\ttrial = {\n\t\t\t\tdata: {block:i},\n\t\t\t\t//layout: layout(i),\n\t\t\t\tinherit: {set:'instructions', type:'byData', data: {block:'generic'}},\n\t\t\t\tcustomize: customize\n\t\t\t};\n\n\t\t\t// default stimulus\n\t\t\tstimulus = {\n\t\t\t\tinherit:'instructions',\n\t\t\t\tmedia: {template:'inst' + i + '.jst'}\n\t\t\t};\n\n\t\t\t// update trial/stimulus with user settings\n\t\t\tsettings.media && (stimulus.media = settings.media);\n\t\t\tsettings.template && (stimulus.media = {inlineTemplate: settings.template});\n\t\t\tsettings.css && (stimulus.css = settings.css);\n\t\t\tsettings.extend && (_.extend(trial,settings.extend));\n\n\t\t\ttrial.stimuli = [stimulus];\n\n\t\t\t// push trial into the instructions array\n\t\t\tinstructionsArr.push(trial);\n\t\t}\n\n\t\t// add the category types into the generic instructions data\n\t\t_.each(categories,function(category, categoryType){\n\t\t\t// set category names\n\t\t\tgeneric.data[categoryType] = category.name;\n\t\t\t// set category colors (mainly for the simple_layout)\n\t\t\tgeneric.data[categoryType + 'Color'] = category.titleColor;\n\t\t});\n\n\t\tlast.stimuli.push({\n\t\t\tinherit:'instructions',\n\t\t\tmedia: properties.endMedia || {html:'<div><p style=\"font-size:1.4em\"><color=\"#FFFAFA\">You have completed this task<br/><br/>Thank you very much for your participation.<br/><br/> Press \"space\" in order to continue.</p></div>'}\n\t\t});\n\n\t\tinstructionsArr.push(last);\n\n\n\t\treturn instructionsArr;\n\t} // end build instructions\n\n\t// this function returns the instructions array if it has no arguments\n\t// if it has arguments, it updates the instructions array\n\treturn function instructions(block,settings){\n\t\t// if there are no arguments return the instructions array\n\t\tif (!arguments.length) {\n\t\t\treturn buildInstructions();\n\t\t} else { // if there are arguments we need to save the settings\n\t\t\tsettingsArr[block] = settings;\n\t\t}\n\t};\n\n});\n","/*\n * Returns a trial sets object\n */\ndefine('extensions/iat/trial/trials',['../data/categories','./default', './instructions','./IATlayout'],function(categories,defaultTrial,instructions,layout){\n\treturn function trials(){\n\n\t\tvar trialSets = {}\n\t\t\t, attribute1 = categories.attribute1.name\n\t\t\t, attribute2 = categories.attribute2.name\n\t\t\t, concept1 = categories.concept1.name\n\t\t\t, concept2 = categories.concept2.name;\n\n\t\ttrialSets.Default = [defaultTrial()];\n\t\ttrialSets.instructions = instructions();\n\n\t\ttrialSets.IAT = [\n\t\t\t// block1\n\t\t\t{\n\t\t\t\tdata: {part:1, condition: concept1 + ',' + concept2},\n\t\t\t\tlayout: layout(1),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block2\n\t\t\t{\n\t\t\t\tdata: {part:2, condition: attribute1 + ',' + attribute2},\n\t\t\t\tlayout: layout(2),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block3\n\t\t\t{\n\t\t\t\tdata: {part:3, row:1, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'first'},\n\t\t\t\tlayout: layout(3),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdata: {part:3, row:2, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'first'},\n\t\t\t\tlayout: layout(3),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block4 (same as 3)\n\t\t\t{\n\t\t\t\tdata: {part:4, row:1, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'second'},\n\t\t\t\tlayout: layout(4),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdata: {part:4, row:2, condition: attribute1 + '/' + concept1 + ',' + attribute2 + '/' + concept2, parcel:'second'},\n\t\t\t\tlayout: layout(4),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block5\n\t\t\t{\n\t\t\t\tdata: {part:5, condition: concept2 + ',' + concept1},\n\t\t\t\tlayout: layout(5),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block6\n\t\t\t{\n\t\t\t\tdata: {part:6, row:1, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1, parcel:'first'},\n\t\t\t\tlayout: layout(6),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdata: {part:6, row:2, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1,parcel:'first'},\n\t\t\t\tlayout: layout(6),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t// block7  (same as 6)\n\t\t\t{\n\t\t\t\tdata: {part:7, row:1, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1, parcel:'second'},\n\t\t\t\tlayout: layout(7),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'concept1_right'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdata: {part:7, row:2, condition: attribute1 + '/' + concept2 + ',' + attribute2 + '/' + concept1,parcel:'second'},\n\t\t\t\tlayout: layout(7),\n\t\t\t\tinherit: 'Default',\n\t\t\t\tstimuli: [\n\t\t\t\t\t{inherit:{type:'exRandom',set:'attribute1_left'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}},\n\t\t\t\t\t{inherit:{type:'exRandom',set:'feedback'}}\n\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\treturn trialSets;\n\t};\n\n});\n","define('extensions/iat/stimuli/stimuli',['underscore','../data/properties','../data/categories'],function(_,properties,categories){\n\n\treturn function stimuli(){\n\t\tvar stimSets = {}\n\t\t\t, defaultStim\n\t\t\t, defaultFBstim;\n\n\t\t// Build default stimulus\n\t\t// ***************************************************************\n\t\tdefaultStim = properties.defaultStimulus;\n\t\tdefaultStim.css = _.defaults(defaultStim.css || {}, {\n\t\t\tfont: properties.font,\n\t\t\tfontSize: properties.fontSize,\n\t\t\tcolor: properties.fontColor\n\t\t});\n\n\t\tstimSets.Default = [defaultStim];\n\t\tstimSets.instructions = [properties.instructionsStimulus];\n\n\t\t// Trial stimuli\n\t\t// ***************************************************************\n\n\t\t// create stimuli for each of the categories\n\t\tstimSets['attribute1'] = [_.extend(categories.attribute1.stimulus || {}, {inherit:'Default', css:categories.attribute1.css || defaultStim.css})];\n\t\tstimSets['attribute2'] = [_.extend(categories.attribute2.stimulus || {}, {inherit:'Default', css:categories.attribute2.css || defaultStim.css})];\n\t\tstimSets['concept1'] = [_.extend(categories.concept1.stimulus || {}, {inherit:'Default', css:categories.concept1.css || defaultStim.css})];\n\t\tstimSets['concept2'] = [_.extend(categories.concept2.stimulus || {}, {inherit:'Default', css:categories.concept2.css || defaultStim.css})];\n\n\t\t// add the trial stimuli 5 time so that the randomization has meaning\n\t\t// iterations are supposed to expand the current set\n\t\t_.extend(stimSets, {attribute1_left:[], attribute1_right:[], concept1_left:[], concept1_right:[]});\n\t\tfor (var i = 0; i <5; i++) {\n\t\t\tstimSets['attribute1_left'] = stimSets['attribute1_left'].concat([\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.attribute1.name}, inherit:'attribute1', media: {inherit:{type:'exRandom',set:'attribute1'}}},\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.attribute2.name}, inherit:'attribute2', media: {inherit:{type:'exRandom',set:'attribute2'}}}\n\t\t\t]);\n\t\t\tstimSets['attribute1_right'] = stimSets['attribute1_right'].concat([\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.attribute2.name}, inherit:'attribute2', media: {inherit:{type:'exRandom',set:'attribute2'}}},\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.attribute1.name}, inherit:'attribute1', media: {inherit:{type:'exRandom',set:'attribute1'}}}\n\t\t\t]);\n\t\t\tstimSets['concept1_left'] = stimSets['concept1_left'].concat([\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.concept1.name}, inherit:'concept1', media: {inherit:{type:'exRandom',set:'concept1'}}},\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.concept2.name}, inherit:'concept2', media: {inherit:{type:'exRandom',set:'concept2'}}}\n\t\t\t]);\n\t\t\tstimSets['concept1_right'] = stimSets['concept1_right'].concat([\n\t\t\t\t\t{data:{side:'left', handle:'target', alias:categories.concept2.name}, inherit:'concept2', media: {inherit:{type:'exRandom',set:'concept2'}}},\n\t\t\t\t\t{data:{side:'right', handle:'target', alias:categories.concept1.name}, inherit:'concept1', media: {inherit:{type:'exRandom',set:'concept1'}}}\n\t\t\t]);\n\t\t}\n\n\t\t// Build feedback stimuli\n\t\t// ***************************************************************\n\t\t// default feedback stimuli\n\t\tdefaultFBstim = {\n\t\t\tcorrect: {handle:'correct_feedback', location: {top: 80}, css:{color:'green','font-size':'4em'}, media: {word:'OK'}, nolog:true},\n\t\t\terror: {handle:'error_feedback', location: {top: 80}, css:{color:'red','font-size':'4em'}, media: {word:'X'}, nolog:true},\n\t\t\ttimeout: {handle:'timeout_feedback', location: {top: 80}, css:{color:'red','font-size':'4em'}, media: {word:'X'}, nolog:true}\n\t\t};\n\n\t\t// get data from properties and create relevant stimuli\n\t\tstimSets['feedback'] = [];\n\t\t_.each(['correct','error','timeout'],function(type){\n\t\t\tvar stimulus =  defaultFBstim[type];\n\n\t\t\t// extend the default stimulus with any stimulus data from the properties object\n\t\t\tif (properties[type + '_feedback'].css){\n\t\t\t\tstimulus.css = properties[type + '_feedback'].css;\n\t\t\t}\n\n\t\t\t// if we have media object, use it instead of the default\n\t\t\tif (properties[type + '_feedback'].media){\n\t\t\t\tstimulus.media = properties[type + '_feedback'].media;\n\t\t\t}\n\n\t\t\tstimSets['feedback'].push(stimulus);\n\t\t});\n\n\t\treturn stimSets;\n\t};\n});\n","define('extensions/iat/data/sequence',['./properties'],function(properties){\n\n\t/**\n\t * Takes a sequence array and pushes in a block according to the settings in blockObj:\n\t * {\n\t *  part: 1,\n\t *  block: 1,\n\t *  twoRows: false,\n\t *  trials: 20\n\t * }\n\t *\n\t * Clarification: blocks are the order of the blocks. parts are the type of block...\n\t */\n\n\tvar addBlock = function addBlock(sequenceArr, blockObj){\n\n\t\t// push instructions\n\t\tsequenceArr.push({\n\t\t\tdata: {part:blockObj.part, block:blockObj.block, IATversion:properties.IATversion, blockStart:true},\n\t\t\tinherit: {set:'instructions', type:'byData', data: {block:blockObj.block}}\n\t\t});\n\n\t\t// push block trials\n\t\tsequenceArr.push({\n\t\t\tmixer : 'repeat',\n\t\t\ttimes : !blockObj.twoRows ? blockObj.trials : Math.floor(blockObj.trials/2),\n\t\t\tdata : !blockObj.twoRows ?\n\t\t\t\t// if we have one row\n\t\t\t\t[\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part}, set:'IAT'}, data: {block:blockObj.block}}\n\t\t\t\t]\n\t\t\t\t// if we have two rows\n\t\t\t\t: [\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part,row:1}, set:'IAT'}, data: {block:blockObj.block}},\n\t\t\t\t\t{inherit : {type:'byData', data:{part:blockObj.part,row:2}, set:'IAT'}, data: {block:blockObj.block}}\n\t\t\t\t]\n\t\t});\n\t};\n\n\tfunction getTrials(block, defaultTrials){\n\t\treturn properties.trialsPerBlock && (typeof properties.trialsPerBlock[block] == 'number') ? properties.trialsPerBlock[block] : defaultTrials;\n\t}\n\n\tfunction longIAT(){\n\t\tvar v1 = [], v2 = [];\n\n\t\t// build version 1\n\t\taddBlock(v1,{part:1,block:1,trials:getTrials(1,20),twoRows:false});\n\t\taddBlock(v1,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\n\t\taddBlock(v1,{part:3,block:3,trials:getTrials(3,20),twoRows:true});\n\t\taddBlock(v1,{part:4,block:4,trials:getTrials(4,40),twoRows:true});\n\t\taddBlock(v1,{part:5,block:5,trials:getTrials(5,40),twoRows:false});\n\t\taddBlock(v1,{part:6,block:6,trials:getTrials(6,20),twoRows:true});\n\t\taddBlock(v1,{part:7,block:7,trials:getTrials(7,40),twoRows:true});\n\n\t\t// build version 2\n\t\taddBlock(v2,{part:5,block:1,trials:getTrials(5,20),twoRows:false});\n\t\taddBlock(v2,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\n\t\taddBlock(v2,{part:6,block:3,trials:getTrials(6,20),twoRows:true});\n\t\taddBlock(v2,{part:7,block:4,trials:getTrials(7,40),twoRows:true});\n\t\taddBlock(v2,{part:1,block:5,trials:getTrials(1,40),twoRows:false});\n\t\taddBlock(v2,{part:3,block:6,trials:getTrials(3,20),twoRows:true});\n\t\taddBlock(v2,{part:4,block:7,trials:getTrials(4,40),twoRows:true});\n\n\t\treturn !properties.randomize_order ?\n\t\t\tv1\n\t\t\t: [\n\t\t\t\t{\n\t\t\t\t\tmixer: 'choose',\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t{mixer:'wrapper',data:v1},\n\t\t\t\t\t\t{mixer:'wrapper',data:v2}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\t}\n\n\tfunction shortIAT(){\n\t\tvar v1 = [], v2 = [];\n\n\t\t// build version 1\n\t\taddBlock(v1,{part:1,block:1,trials:getTrials(1,20),twoRows:false});\n\t\taddBlock(v1,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\n\t\taddBlock(v1,{part:3,block:3,trials:getTrials(3,50),twoRows:true});\n\t\taddBlock(v1,{part:5,block:4,trials:getTrials(5,30),twoRows:false});\n\t\taddBlock(v1,{part:6,block:5,trials:getTrials(6,50),twoRows:true});\n\n\t\t// build version 2\n\t\taddBlock(v2,{part:5,block:1,trials:getTrials(5,20),twoRows:false});\n\t\taddBlock(v2,{part:2,block:2,trials:getTrials(2,20),twoRows:false});\n\t\taddBlock(v2,{part:6,block:3,trials:getTrials(6,50),twoRows:true});\n\t\taddBlock(v2,{part:1,block:4,trials:getTrials(1,30),twoRows:false});\n\t\taddBlock(v2,{part:3,block:5,trials:getTrials(3,50),twoRows:true});\n\n\t\treturn !properties.randomize_order ?\n\t\t\tv1\n\t\t\t: [\n\t\t\t\t{\n\t\t\t\t\tmixer: 'choose',\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t{mixer:'wrapper',data:v1},\n\t\t\t\t\t\t{mixer:'wrapper',data:v2}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\t}\n\n\treturn function sequence(){\n\t\tvar sequenceArr = properties.IATversion == 'short' ? shortIAT() : longIAT();\n\t\tsequenceArr.push({\n\t\t\tdata: {blockStart:true},\n\t\t\tinherit: {set:'instructions', type:'byData', data: {block:'last'}}\n\t\t});\n\n\t\treturn sequenceArr;\n\t};\n\n});\n","define('extensions/iat/component',['require','underscore','app/API','./data/properties','./data/categories','./trial/trials','./trial/instructions','./stimuli/stimuli','./data/sequence'],function(require){\n\n\tvar   _\t\t\t\t= require('underscore')\n\t\t, API\t\t\t= require('app/API')\n\t\t, properties\t= require('./data/properties')\n\t\t, categories\t= require('./data/categories')\n\t\t, trials\t\t= require('./trial/trials')\n\t\t, instructions\t= require('./trial/instructions')\n\t\t, stimuli\t\t= require('./stimuli/stimuli')\n\t\t, sequence\t\t= require('./data/sequence');\n\n\n\t// cache API play so we can extend it.\n\tvar APIplay = API.play;\n\n\t_.extend(API,{\n\t\tsetProperties: function setProperties(propertiesObj){\n\t\t\t_.extend(properties,propertiesObj);\n\t\t},\n\t\tsetCategory: function setCategory(name,categoryObj){\n\t\t\tvar allowed_names = ['concept1','concept2', 'attribute1', 'attribute2'];\n\t\t\tif (_.indexOf(allowed_names,name) === -1){\n\t\t\t\tthrow new Error (name + \" is not a valid category name, please use one of the folowing: 'concept1','concept2', 'attribute1', 'attribute2'.\");\n\t\t\t}\n\n\t\t\t// make sure we have a category name\n\t\t\tcategoryObj.name || (categoryObj.name = name);\n\t\t\t// make sure we have a category title\n\t\t\tcategoryObj.title || (categoryObj.title = categoryObj.name);\n\n\t\t\t// create appropriate media set\n\t\t\tif (!categoryObj.media || !categoryObj.media.length) {\n\t\t\t\tthrow new Error ('You must supply a media list for ' + name);\n\t\t\t}\n\t\t\tAPI.addMediaSets(name,categoryObj.media);\n\n\t\t\t// set category\n\t\t\tcategories[name] = categoryObj;\n\t\t},\n\t\tsetInstructions: function setInstructions(){\n\t\t\tinstructions.apply(this, arguments);\n\t\t},\n\t\tplay : function IATcomponentPlay(){\n\t\t\t// settings\n\t\t\tAPI.addSettings('canvas',_.defaults(properties.canvas,{\n\t\t\t\tbackground:properties.background,\n\t\t\t\tcanvasBackground:properties.background\n\t\t\t}));\n\t\t\tAPI.addSettings('base_url', {image:properties.images_base_url, template:properties.templates_base_url});\n\t\t\tAPI.addSettings('logger',{pulse: properties.pulse, url : properties.post_url});\n\t\t\tAPI.addSettings('redirect',properties.next_url);\n\n\t\t\t// trials and stimuli\n\t\t\tAPI.addTrialSets(trials());\n\t\t\tAPI.addStimulusSets(stimuli());\n\n\t\t\t// sequence\n\t\t\tAPI.addSequence(sequence());\n\n\t\t\t// call the original API play\n\t\t\tAPIplay.apply(this);\n\t\t}\n\t});\n\n\treturn API;\n});\n","\ndefine('text!extensions/iat/jst/layout.jst',[],function () { return '<div>\\n\\t<% if (stimulusData.attribute) { %>\\n\\t\\t<span style=\"color:<%= stimulusData.attributeColor || \\'#31b404\\' %>; font-size:<%= stimulusData.attributeSize || \\'1.3em\\'%>\"><%= stimulusData.attribute%></span>\\n\\t<%}%>\\n\\t<% if (stimulusData.attribute && stimulusData.concept) { %>\\n\\t\\t</br>\\n\\t\\t<span style=\"color:<%= stimulusData.separatorColor %>; font-size:<%= stimulusData.separatorSize %>\">or</span>\\n\\t\\t</br>\\n\\t<%}%>\\n\\t<% if (stimulusData.concept) { %>\\n\\t\\t<span style=\"color:<%= stimulusData.conceptColor || \\'#0000FF\\' %>; font-size:<%= stimulusData.conceptSize || \\'1.3em\\'%>\"><%= stimulusData.concept%></span>\\n\\t<%}%>\\n</div>';});\n\n"]}