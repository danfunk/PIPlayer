define(["underscore","utils/pubsub","utils/interface/interface","app/task/script"],function(t,e,r,n){var i={showStim:function(t){var r=t.handle||t;e.publish("stim:start",[r])},hideStim:function(t){var r=t.handle||t;e.publish("stim:stop",[r])},setStimAttr:function(t){var r=t.handle,n=t.setter;e.publish("stim:setAttr",[r,n])},setTrialAttr:function(t,r){if("undefined"==typeof t.setter)throw new Error("The setTrialAttr action requires a setter property");e.publish("trial:setAttr",[t.setter,r])},setInput:function(t){if("undefined"==typeof t.input)throw new Error("The setInput action requires an input property");e.publish("trial:setInput",[t.input])},trigger:function(t){if("undefined"==typeof t.handle)throw new Error("The trigger action requires a handle property");e.publish("trial:setInput",[{handle:t.handle,on:"timeout",duration:+t.duration||0}])},removeInput:function(t){if("undefined"==typeof t.handle)throw new Error("The removeInput action requires a handle property");e.publish("trial:removeInput",[t.handle])},"goto":function(t){e.publish("trial:goto",[t])},endTrial:function(){e.publish("trial:end")},resetTimer:function(t,e){e.latency=0,r.resetTimer()},log:function(t,r){e.publish("log",[t,r])},setGlobalAttr:function(e){switch(typeof e.setter){case"function":e.setter.apply(null,[n.global,e]);break;case"object":t.extend(n.global,e.setter);break;default:throw new Error('setGlobalAttr requires a "setter" property')}},custom:function(t,e){if("function"!=typeof t.fn)throw new Error("The custom action requires a fn propery");t.fn.apply(null,[t,e,n.global])}};return i});
//# sourceMappingURL=action_list.js.map